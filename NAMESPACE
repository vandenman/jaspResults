useDynLib(jaspResults, .registration=TRUE)
exportPattern("^[[:alpha:]]+")
import(Rcpp)
importFrom(R6, R6Class)
S3method("[[", "jaspResultsR")
S3method("[[", "jaspTableR")
S3method("[[", "jaspContainerR")
S3method("[[<-", "jaspResultsR")
S3method("[[<-", "jaspTableR")
S3method("[[<-", "jaspContainerR")
S3method("print", "jaspResultsR")
S3method("print", "jaspObjR")
S3method("decodeplot", "jaspGraphsPlot")
S3method("decodeplot", "gg")
S3method("decodeplot", "recordedplot")
S3method("decodeplot", "gtable")
S3method("decodeplot", "grob")
S3method("decodeplot", "gTree")
S3method("decodeplot", "gDesc")
S3method("decodeplot", "qgraph")
S3method("decodeplot", "function")
S3method(".applyEnDeCoder", "default")
S3method(".applyEnDeCoder", "character")
S3method(".applyEnDeCoder", "factor")
S3method(".applyEnDeCoder", "list")
S3method(".applyEnDeCoder", "matrix")
S3method(".applyEnDeCoder", "data.frame")
S3method("print", "jaspWrapper")
S3method("jaspToRawRobject", "jaspWrapper")
S3method("jaspToRawRobject", "jaspContainerWrapper")
S3method("jaspToRawRobject", "jaspResultsWrapper")
S3method("jaspToRawRobject", "jaspPlotWrapper")
export(dropJaspAttributes)
export(toRobject)
export(initJaspResults)
export(encodeColNames)
export(decodeColNames)
export(jaspResultsCalledFromJasp)
